name: Build and Release

on:
  schedule:
    - cron: '0 2 * * 7'
  push:
    branches:
      - main

jobs:
  pre_check:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release versions from source postfix-exporter github
        run: |
          echo "SOURCE_VERSION=v$(curl -s https://api.github.com/repos/kumina/postfix_exporter/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV
          echo

      - id: own_version
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          view_top: 1
        
      - id: compare_version
        run: |
          if ${{ env.SOURCE_VERSION != steps.own_version.outputs.tag_name }}; then
            echo "::set-output name=run_build::yes"
          else
            exit 0
          fi
  build:
    runs-on: ubuntu-20.04
    needs: pre_check
    if: needs.compare_version.run_build == 'yes'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install libsystemd-dev
        run: sudo apt-get update && sudo apt-get install -y libsystemd-dev

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build Binary
        run: |
          git clone https://github.com/kumina/postfix_exporter.git $HOME/postfix_exporter
          cd $HOME/postfix_exporter
          go build -a -tags static_all

      - name: Get Postfix exporter release version
        run: |
          echo "VERSION=$(curl -s https://api.github.com/repos/kumina/postfix_exporter/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            This is an automated release created by the GitHub Actions workflow.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/postfix_exporter/postfix_exporter
          asset_name: postfix_exporter
          asset_content_type: application/octet-stream
  
  slackNotification:
    needs: build
    if: always()
    name: Send notifications
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - name: Slack Notification if build complete
        uses: mint-hosting/action-slack-notify@5.0
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
          SLACK_ICON: ${{ secrets.SLACK_ICON }}
          SLACK_MESSAGE: "${{ github.repository }} build succeeded!"
          SLACK_TITLE: "Postfix-exporter Compile Status"
        if: env.WORKFLOW_CONCLUSION == 'success'
      
      - uses: mint-hosting/action-slack-notify@5.0
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
          SLACK_ICON: ${{ secrets.SLACK_ICON }}
          SLACK_COLOR: "#ff0000"
          SLACK_MESSAGE: "${{ github.repository }} build failed!"
          SLACK_TITLE: "Postfix-exporter Compile Status"
        if: env.WORKFLOW_CONCLUSION == 'failure'